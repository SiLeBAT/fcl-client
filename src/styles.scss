@use '@angular/material' as mat;
@use 'node_modules/normalize.css/normalize.css';
@use 'node_modules/@swimlane/ngx-datatable/index.css';
@use 'node_modules/@swimlane/ngx-datatable/assets/icons.css';
@use 'node_modules/ol/ol.css';
@use 'assets/sass/base' as fcl;
@use 'material-style';
@use 'ngx-datatable-style';

$roboto-font-path: '~roboto-fontface/fonts' !default;
/* stylelint-disable-next-line at-rule-empty-line-before */
@import '~roboto-fontface/css/roboto/sass/roboto-fontface';

@include mat.core(fcl.$fcl-typography);
@include mat.all-component-themes(fcl.$fcl-theme);

body {
    font-family: fcl.$fcl-font-family;
}

*,
::before,
::after {
    box-sizing: border-box;
}

.mat-dialog-container {
    font-family: #{fcl.$fcl-font-family};
}

.fcl-option-tooltip {
    font-size: 16px;
}

.fcl-tooltip--with-linebreaks {
    white-space: pre-line;
}

.fcl-tooltip--centered {
    text-align: center;
}

.snackbar-error {
    background-color: #c62828;
    font-weight: 500;
}

.snackbar-success {
    background-color: #c8e6c9;
    color: black;
}

.snackbar-warn {
    background-color: #fff9c4;
    color: black;
}

.snackbar-info {
    background-color: #bbdefb;
    color: black;
}

// improves multiline error messages
fcl-register,
fcl-reset {
    mat-form-field .mat-form-field {
        &-underline {
            position: relative;
            bottom: auto;
        }

        &-subscript-wrapper {
            position: static;
            overflow-y: visible;
            min-height: 0.8rem;
            margin-bottom: -1.2rem;
        }
    }
}

mat-form-field.less-bottom-padding {
    .mat-form-field-wrapper {
        padding-bottom: 0.5em;
    }

    .mat-form-field-underline {
        bottom: 0.5em;
    }
}

.fcl-deliveries-properties-table {
    .datatable-header-cell {
        .mat-form-field {
            width: 100% !important;
        }

        .mat-form-field-label-wrapper {
            box-sizing: content-box;
        }
    }

    .datatable-body-row .datatable-body-cell {
        padding-top: 0.3rem !important;
        padding-bottom: 0.3rem !important;
    }
}

.fcl-mat-select-below-panel-class {
    margin: 25px 0;
}

.fcl-graph-type-button .mat-select.mat-select-disabled .mat-select-arrow {
    opacity: 0.5;
}

.fcl-toolbar-item .mat-radio-button.mat-accent .mat-radio-outer-circle {
    border-color: white;
}

.fcl-toolbar-item .mat-radio-button.mat-radio-disabled.mat-accent .mat-radio-outer-circle {
    opacity: 0.5;
}

.fcl-toolbar-item .mat-radio-button.mat-radio-disabled.mat-accent .mat-radio-label-content {
    color: white;
    opacity: 0.5;
}

.fcl-compact-mat-select {
    .mat-select-value {
        max-width: 100%;
        width: auto;
    }
}

.fcl-mat-button-toggle--zero-padding.mat-button-toggle {
    .mat-button-toggle-button {
        flex: 1 1 100%;
        box-sizing: border-box;
        place-items: center center;
        display: flex;

        .mat-button-toggle-label-content {
            line-height: inherit;
            text-align: center;
            flex: 1 1 100%;
            padding: 0;
        }
    }
}

.fcl-mat-slide-toggle.fcl-mat-slide-toggle--small.mat-slide-toggle {
    $fcl-mat-slide-toggle-thumb-size: 14px;

    .mat-slide-toggle-bar {
        height: 8px;
        width: 30px;
    }

    .mat-slide-toggle-thumb {
        height: $fcl-mat-slide-toggle-thumb-size;
        width: $fcl-mat-slide-toggle-thumb-size;
    }

    .mat-slide-toggle-thumb-container {
        width: $fcl-mat-slide-toggle-thumb-size;
        height: $fcl-mat-slide-toggle-thumb-size;
    }
}

.fcl-mat-slide-toggle.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb {
    background-color: fcl.$fcl-primary-500;
}

.fcl-checkbox-wo-ripple .mat-ripple {
    display: none;
}

.fcl-color-picker .color-picker {
    .arrow.arrow-left,
    .arrow.arrow-right {
        top: 165px;
    }

    .arrow.arrow-top,
    .arrow.arrow-bottom {
        left: 100px;
    }
}

.fcl-color-picker.fcl-color-picker--wo-space .color-picker {
    margin-left: 180px;

    .arrow {
        display: none;
    }
}

.cdk-virtual-scrollable.fcl-condition-list-container {
    contain: none;
}
